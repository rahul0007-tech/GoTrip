# Generated by Django 5.1.5 on 2025-02-10 17:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=20)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=150)),
                ('isVerified', models.BooleanField(default=False)),
                ('Created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('license', models.ImageField(blank=True, null=True, upload_to='license')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='drivers')),
                ('status', models.CharField(choices=[('busy', 'Busy'), ('free', 'Free')], default='free', max_length=5)),
            ],
            options={
                'verbose_name': 'driver',
                'verbose_name_plural': 'drivers',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='passengers')),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'verbose_name': 'passenger',
                'verbose_name_plural': 'passengers',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_color', models.CharField(max_length=30)),
                ('vehicle_company', models.CharField(max_length=50)),
                ('vehicle_type', models.CharField(choices=[('Suv', 'SUV'), ('Sedan', 'Sedan'), ('Hatchback', 'Hatchback'), ('4X4', '4X4'), ('PickUp', 'Pickup')], max_length=20)),
                ('vehicle_fuel_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Electric', 'Electric')], max_length=20)),
                ('vehicle_number', models.CharField(max_length=20)),
                ('sitting_capacity', models.IntegerField()),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='users.driver')),
            ],
        ),
    ]
